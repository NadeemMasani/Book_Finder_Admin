{"version":3,"sources":["hooks/auth-hook.js","components/UIElements/Card.js","util/validators.js","components/FormElements/Input.js","components/FormElements/Button.js","components/UIElements/Backdrop.js","components/UIElements/Modal.js","components/UIElements/ErrorModal.js","components/UIElements/LoadingSpinner.js","hooks/form-hook.js","hooks/http-hook.js","context/auth-context.js","pages/Auth.js","components/BookItem.js","components/BookList.js","components/Library.js","pages/LibHome.js","components/Navigation/MainHeader.js","components/Navigation/NavLinks.js","components/Navigation/SideDrawer.js","components/Navigation/MainNavigation.js","pages/NewBook.js","pages/UpdateBook.js","App.js","reportWebVitals.js","index.js"],"names":["logoutTimer","Card","props","className","style","children","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","Button","href","size","inverse","danger","to","exact","onClick","disabled","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","LoadingSpinner","asOverlay","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","token","libId","login","logout","Auth","auth","useContext","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","process","JSON","stringify","name","address","country","city","zip","zip4","libid","console","log","undefined","prevMode","BookItem","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","Authorization","onDelete","author","category","isbn","BookList","items","map","book","onDeleteBook","publisher","Library","library","books","setBooks","currentPage","setCurrentPage","postsPerPage","fetchBooks","indexOfLastPost","indexOfFirstPost","currentBooks","slice","bookDeleteId","prevBooks","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageNumber","selected","containerClassName","activeClassName","pageClassName","previousClassName","nextClassName","pageLinkClassName","LibHome","setLibrary","lid","fetchLibrary","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewBook","history","useHistory","bookSubmitHandler","UpdateBook","bookId","useParams","bid","loadedBook","setLoadedBook","fetchBook","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setLibId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"gcAIIA,E,4GCQWC,EARF,SAAAC,GACX,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,Y,QCPPC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBC,EAAoB,iBAAO,CAAEC,KAAML,IAcnCM,EAAW,SAACC,EAAOC,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,cAErBD,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BE,EAAyB,QAC9BA,EAAUL,OAASL,IACrBS,EAAUA,GAAWF,EAAMI,OAAOC,OAAS,GAEzCF,EAAUL,OAASJ,IACrBQ,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUG,KAEpDH,EAAUL,OAASH,IACrBO,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUG,KA7BjC,QA+BnBH,EAAUL,OACZI,EAAUA,IAAYF,GAASG,EAAUG,KA/BpB,QAiCnBH,EAAUL,OACZI,EAAUA,IAAYF,GAASG,EAAUG,KAEvCH,EAAUL,OAASF,IACrBM,EAAUA,GAAW,iBAAiBK,KAAKP,KAnBF,8BAsB7C,OAAOE,GCvCHM,G,MAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOZ,MACb,IAAK,SACH,OAAO,2BACFW,GADL,IAEET,MAAOU,EAAOJ,IACdJ,QAASH,EAASW,EAAOJ,IAAKI,EAAOT,cAEzC,IAAK,QACH,OAAO,2BACFQ,GADL,IAEEE,WAAW,IAGf,QACE,OAAOF,KAiEEG,EA7DD,SAAAvB,GAAU,IAAD,EACUwB,qBAAWL,EAAc,CACtDR,MAAOX,EAAMyB,cAAgB,GAC7BH,WAAW,EACXT,QAASb,EAAM0B,eAAgB,IAJZ,mBACdC,EADc,KACFC,EADE,KAObC,EAAgB7B,EAAhB6B,GAAIC,EAAY9B,EAAZ8B,QACJnB,EAAmBgB,EAAnBhB,MAAOE,EAAYc,EAAZd,QAEfkB,qBAAU,WACRD,EAAQD,EAAIlB,EAAOE,KAClB,CAACgB,EAAIlB,EAAOE,EAASiB,IAExB,IAAME,EAAgB,SAAAC,GACpBL,EAAS,CACPnB,KAAM,SACNQ,IAAKgB,EAAMC,OAAOvB,MAClBC,WAAYZ,EAAMY,cAIhBuB,EAAe,WACnBP,EAAS,CACPnB,KAAM,WAIJ2B,EACc,UAAlBpC,EAAMoC,QACJ,uBACEP,GAAI7B,EAAM6B,GACVpB,KAAMT,EAAMS,KACZ4B,YAAarC,EAAMqC,YACnBC,SAAUN,EACVO,OAAQJ,EACRxB,MAAOgB,EAAWhB,QAGpB,0BACEkB,GAAI7B,EAAM6B,GACVW,KAAMxC,EAAMwC,MAAQ,EACpBF,SAAUN,EACVO,OAAQJ,EACRxB,MAAOgB,EAAWhB,QAIxB,OACE,sBACEV,UAAS,wBAAmB0B,EAAWd,SACrCc,EAAWL,WACX,yBAHJ,UAKE,uBAAOmB,QAASzC,EAAM6B,GAAtB,SAA2B7B,EAAM0C,QAChCN,GACCT,EAAWd,SAAWc,EAAWL,WAAa,4BAAItB,EAAM2C,gBCtCjDC,G,MArCA,SAAA5C,GACb,OAAIA,EAAM6C,KAEN,mBACE5C,UAAS,yBAAoBD,EAAM8C,MAAQ,UAAlC,YAA+C9C,EAAM+C,SAC5D,kBADO,YACc/C,EAAMgD,QAAU,kBACvCH,KAAM7C,EAAM6C,KAHd,SAKG7C,EAAMG,WAITH,EAAMiD,GAEN,cAAC,IAAD,CACEA,GAAIjD,EAAMiD,GACVC,MAAOlD,EAAMkD,MACbjD,UAAS,yBAAoBD,EAAM8C,MAAQ,UAAlC,YAA+C9C,EAAM+C,SAC5D,kBADO,YACc/C,EAAMgD,QAAU,kBAJzC,SAMGhD,EAAMG,WAKX,wBACEF,UAAS,yBAAoBD,EAAM8C,MAAQ,UAAlC,YAA+C9C,EAAM+C,SAC5D,kBADO,YACc/C,EAAMgD,QAAU,kBACvCvC,KAAMT,EAAMS,KACZ0C,QAASnD,EAAMmD,QACfC,SAAUpD,EAAMoD,SALlB,SAOGpD,EAAMG,a,QCzBEkD,G,MAPE,SAAArD,GACf,OAAOsD,IAASC,aACd,qBAAKtD,UAAU,WAAWkD,QAASnD,EAAMmD,UACzCK,SAASC,eAAe,oBCDtBC,G,MAAe,SAAA1D,GACnB,IAAM2D,EACJ,sBAAK1D,UAAS,gBAAWD,EAAMC,WAAaC,MAAOF,EAAME,MAAzD,UACE,wBAAQD,UAAS,wBAAmBD,EAAM4D,aAA1C,SACE,6BAAK5D,EAAM6D,WAEb,uBACEC,SACE9D,EAAM8D,SAAW9D,EAAM8D,SAAW,SAAA7B,GAAK,OAAIA,EAAM8B,kBAFrD,UAKE,qBAAK9D,UAAS,yBAAoBD,EAAMgE,cAAxC,SACGhE,EAAMG,WAET,wBAAQF,UAAS,wBAAmBD,EAAMiE,aAA1C,SACGjE,EAAMkE,eAKf,OAAOZ,IAASC,aAAaI,EAASH,SAASC,eAAe,iBAoBjDU,EAjBD,SAAAnE,GACZ,OACE,eAAC,IAAMoE,SAAP,WACGpE,EAAMqE,MAAQ,cAAC,EAAD,CAAUlB,QAASnD,EAAMsE,WACxC,cAACC,EAAA,EAAD,CACEC,GAAIxE,EAAMqE,KACVI,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QALb,SAOE,cAAC,EAAD,eAAkB5E,UCvBX6E,EAbI,SAAA7E,GACjB,OACE,cAAC,EAAD,CACEsE,SAAUtE,EAAM8E,QAChBjB,OAAO,qBACPQ,OAAQrE,EAAM+E,MACdb,OAAQ,cAAC,EAAD,CAAQf,QAASnD,EAAM8E,QAAvB,kBAJV,SAME,4BAAI9E,EAAM+E,WCDDC,G,MARQ,SAAAhF,GACrB,OACE,qBAAKC,UAAS,UAAKD,EAAMiF,WAAa,4BAAtC,SACE,qBAAKhF,UAAU,sB,QCLfiF,EAAc,SAAC9D,EAAOC,GAC1B,OAAQA,EAAOZ,MACb,IAAK,eACH,IAAI0E,GAAc,EAClB,IAAK,IAAMC,KAAWhE,EAAMiE,OACrBjE,EAAMiE,OAAOD,KAIhBD,EADEC,IAAY/D,EAAO+D,QACPD,GAAe9D,EAAOR,QAEtBsE,GAAe/D,EAAMiE,OAAOD,GAASvE,SAGvD,OAAO,2BACFO,GADL,IAEEiE,OAAO,2BACFjE,EAAMiE,QADL,kBAEHhE,EAAO+D,QAAU,CAAEzE,MAAOU,EAAOV,MAAOE,QAASQ,EAAOR,WAE3DA,QAASsE,IAEb,IAAK,WACH,MAAO,CACLE,OAAQhE,EAAOgE,OACfxE,QAASQ,EAAO8D,aAEpB,QACE,OAAO/D,IAIAkE,EAAU,SAACC,EAAeC,GAAyB,IAAD,EAC/BhE,qBAAW0D,EAAa,CACpDG,OAAQE,EACR1E,QAAS2E,IAHkD,mBACtDC,EADsD,KAC3C7D,EAD2C,KAuB7D,MAAO,CAAC6D,EAjBaC,uBAAY,SAAC7D,EAAIlB,EAAOE,GAC3Ce,EAAS,CACPnB,KAAM,eACNE,MAAOA,EACPE,QAASA,EACTuE,QAASvD,MAEV,IAEiB6D,uBAAY,SAACC,EAAWC,GAC1ChE,EAAS,CACPnB,KAAM,WACN4E,OAAQM,EACRR,YAAaS,MAEd,MCrDQC,EAAgB,WAAO,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEPF,qBAFO,mBAE1Bf,EAF0B,KAEnBkB,EAFmB,KAI3BC,EAAqBC,iBAAO,IAE5BC,EAAcV,sBAAW,uCAC7B,WAAOW,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GACjDT,GAAa,GACPU,EAAgB,IAAIC,gBAC1BT,EAAmBU,QAAQC,KAAKH,GAHlC,kBAM2BI,MAAMT,EAAK,CAChCE,SACAC,OACAC,UACAM,OAAQL,EAAcK,SAV5B,cAMUC,EANV,iBAa+BA,EAASC,OAbxC,WAaUC,EAbV,OAeIhB,EAAmBU,QAAUV,EAAmBU,QAAQO,QACtD,SAAAC,GAAO,OAAIA,IAAYV,KAGpBM,EAASK,GAnBlB,uBAoBY,IAAIC,MAAMJ,EAAaK,SApBnC,eAuBIvB,GAAa,GAvBjB,kBAwBWkB,GAxBX,wCA0BIjB,EAAS,KAAIsB,SACbvB,GAAa,GA3BjB,+DAD6B,sDAgC7B,IAcF,OAPAjE,qBAAU,WACR,OAAO,WAELmE,EAAmBU,QAAQY,SAAQ,SAAAC,GAAS,OAAIA,EAAUC,cAE3D,IAEI,CAAE3B,YAAWhB,QAAOqB,cAAauB,WAXrB,WACjB1B,EAAS,SC1CA2B,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,KACPC,MAAO,aACPC,OAAQ,eC+OKC,G,MArOF,WACT,IVT+BnH,EUSzBoH,EAAOC,qBAAWV,GADT,EAEuB9B,oBAAS,GAFhC,mBAERyC,EAFQ,KAEKC,EAFL,OAGuC3C,IAA9CE,EAHO,EAGPA,UAAWhB,EAHJ,EAGIA,MAAOqB,EAHX,EAGWA,YAAauB,EAHxB,EAGwBA,WAHxB,EAKgCrC,EAC3C,CACImD,MAAO,CACH9H,MAAO,GACPE,SAAS,GAEb6H,SAAU,CACN/H,MAAO,GACPE,SAAS,KAGjB,GAhBW,mBAKR4E,EALQ,KAKGkD,EALH,KAKiBC,EALjB,KAuETC,EAAiB,uCAAG,WAAM5G,GAAN,iBAAAqE,EAAA,yDACtBrE,EAAM8B,kBAEFwE,EAHkB,0CAKanC,EAAY,GAAD,OAC/B0C,0CAD+B,oBAElC,OACAC,KAAKC,UAAU,CACXP,MAAOhD,EAAUJ,OAAOoD,MAAM9H,MAC9B+H,SAAUjD,EAAUJ,OAAOqD,SAAS/H,QAExC,CACI,eAAgB,qBAbV,OAKRuG,EALQ,OAgBdmB,EAAKH,MAAMhB,EAAaa,OAAQb,EAAac,MAAOd,EAAae,OAhBnD,2GAqBa7B,EAAY,GAAD,OAC/B0C,0CAD+B,qBAElC,OACAC,KAAKC,UAAU,CACXC,KAAMxD,EAAUJ,OAAO4D,KAAKtI,MAC5B8H,MAAOhD,EAAUJ,OAAOoD,MAAM9H,MAC9B+H,SAAUjD,EAAUJ,OAAOqD,SAAS/H,MACpCuI,QAASzD,EAAUJ,OAAO6D,QAAQvI,MAClCwI,QAAS1D,EAAUJ,OAAO8D,QAAQxI,MAClCyI,KAAM3D,EAAUJ,OAAO+D,KAAKzI,MAC5B0I,IAAK5D,EAAUJ,OAAOgE,IAAI1I,MAC1B2I,KAAM7D,EAAUJ,OAAOiE,KAAK3I,QAGhC,CACI,eAAgB,qBApCV,QAqBRuG,EArBQ,OAwCdmB,EAAKJ,MAAQf,EAAaqC,MAC1BlB,EAAKN,OAASb,EAAaa,OAC3ByB,QAAQC,IAAIvC,GACZmB,EAAKH,MAAMhB,EAAaa,OAAQb,EAAac,MAAOd,EAAaqC,OA3CnD,mDA8CdC,QAAQC,IAAR,MA9Cc,iEAAH,sDAkDvB,OACI,eAAC,IAAMrF,SAAP,WACI,cAAC,EAAD,CAAYW,MAAOA,EAAOD,QAAS6C,IACnC,eAAC,EAAD,CAAM1H,UAAU,iBAAhB,UACK8F,GAAa,cAAC,EAAD,CAAgBd,WAAS,IACtCsD,EAAc,iDAA2B,iEAC1C,uBACA,uBAAMzE,SAAU+E,EAAhB,WACMN,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,OACHpB,KAAK,OACLiC,MAAM,eACN9B,WAAY,CAACJ,KACbmC,UAAU,uBACVb,QAAS6G,KAGfJ,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,UACHpB,KAAK,OACLiC,MAAM,UACN9B,WAAY,CAACJ,KACbmC,UAAU,0BACVb,QAAS6G,IAGjB,cAAC,EAAD,CACIvG,QAAQ,QACRP,GAAG,QACHpB,KAAK,QACLiC,MAAM,SACN9B,WAAY,CV1JE,CAAEH,KAAMF,IU2JtBoC,UAAU,sCACVb,QAAS6G,IAEb,cAAC,EAAD,CACIvG,QAAQ,QACRP,GAAG,WACHpB,KAAK,WACLiC,MAAM,WACN9B,WAAY,EV7KDK,EU6KsB,EV7Kd,CACzCR,KAAMJ,EACNY,IAAKA,KU4KiB0B,UAAU,wDACVb,QAAS6G,KAGXJ,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,UACHpB,KAAK,OACLiC,MAAM,UACN9B,WAAY,CAACJ,KACbmC,UAAU,wBACVb,QAAS6G,KAIfJ,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,OACHpB,KAAK,OACLiC,MAAM,OACN9B,WAAY,CAACJ,KACbmC,UAAU,qBACVb,QAAS6G,KAGfJ,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,MACHpB,KAAK,OACLiC,MAAM,MACN9B,WAAY,CAACJ,KACbmC,UAAU,oBACVb,QAAS6G,KAIfJ,GACE,cAAC,EAAD,CACInG,QAAQ,QACRP,GAAG,OACHpB,KAAK,OACLiC,MAAM,OACN9B,WAAY,CAACJ,KACbmC,UAAU,qBACVb,QAAS6G,IAGjB,cAAC,EAAD,CAAQlI,KAAK,SAAS2C,UAAWqC,EAAU5E,QAA3C,SACK0H,EAAc,QAAU,cAGjC,eAAC,EAAD,CAAQxF,SAAO,EAACI,QAzMF,WACjBoF,EAcDK,EAAY,2BAEDnD,EAAUJ,QAFV,IAGH4D,KAAM,CACFtI,MAAO,GACPE,SAAS,GAEbqI,QAAS,CACLvI,MAAO,GACPE,SAAS,GAGbsI,QAAS,CACLxI,MAAO,GACPE,SAAS,GAGbuI,KAAM,CACFzI,MAAO,GACPE,SAAS,GAEbwI,IAAK,CACD1I,MAAO,KACPE,SAAS,GAEbyI,KAAM,CACF3I,MAAO,KACPE,SAAS,MAIjB,GA5CJ+H,EAAY,2BAEDnD,EAAUJ,QAFV,IAGH4D,UAAMS,EACNR,aAASQ,EACTP,aAASO,EACTN,UAAMM,EACNL,SAAKK,EACLJ,UAAMI,IAEVjE,EAAUJ,OAAOoD,MAAM5H,SAAW4E,EAAUJ,OAAOqD,SAAS7H,SAqCpE2H,GAAe,SAAAmB,GAAQ,OAAKA,MAwJpB,uBACepB,EAAc,SAAW,mBCxJzCqB,G,MA5EE,SAAA5J,GACb,IAAMqI,EAAOC,qBAAWV,GADF,EAEa/B,IAA3BE,EAFc,EAEdA,UAAWK,EAFG,EAEHA,YAFG,EAG0BN,oBAAS,GAHnC,mBAGf+D,EAHe,KAGGC,EAHH,KAShBC,EAAsB,WACxBD,GAAoB,IAGlBE,EAAoB,uCAAG,sBAAA1D,EAAA,6DACzBwD,GAAoB,GADK,kBAGf1D,EAAY,GAAD,OACV0C,0CADU,6BAC2CT,EAAKJ,MADhD,YACyDjI,EAAM6B,IAC5E,SACA,KACA,CACIoI,cAAe,UAAY5B,EAAKL,QARnB,OAWrBhI,EAAMkK,SAASlK,EAAM6B,IAXA,uGAAH,qDAe1B,OACI,eAAC,IAAMuC,SAAP,WACI,cAAC,EAAD,CACIC,KAAMwF,EACNvF,SAAUyF,EACVlG,OAAO,gBACPI,YAAY,4BACZC,OACI,eAAC,IAAME,SAAP,WACI,cAAC,EAAD,CAAQrB,SAAO,EAACI,QAAS4G,EAAzB,oBAGA,cAAC,EAAD,CAAQ/G,QAAM,EAACG,QAAS6G,EAAxB,uBAVZ,SAgBI,gIAKJ,oBAAI/J,UAAU,YAAd,SACI,eAAC,EAAD,WACK8F,GAAa,cAAC,EAAD,CAAgBd,WAAS,IACvC,sBAAKhF,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,+BAAOD,EAAMiJ,OACb,uBACA,8CAAiBjJ,EAAMmK,OAAvB,OACA,uBACA,8CAAiBnK,EAAMoK,YACvB,uBACA,6CAAgBpK,EAAMqK,QACtB,0BAEJ,sBAAKpK,UAAU,cAAf,UACI,cAAC,EAAD,CAAQgD,GAAE,gBAAWjD,EAAM6B,IAA3B,0BACA,cAAC,EAAD,CAAQmB,QAAM,EAACG,QA9DN,WAC7B2G,GAAoB,IA6DA,0CC7CbQ,G,MA7BE,SAAAtK,GACb,OAA2B,IAAvBA,EAAMuK,MAAMvJ,OAER,qBAAKf,UAAU,WAAf,SACI,gFAKR,8BACI,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,YAAd,mDACCD,EAAMuK,MAAMC,KAAI,SAAAC,GAAI,OACjB,cAAC,EAAD,CAEI5I,GAAI4I,EAAK5I,GACToH,KAAMwB,EAAKxB,KACXkB,OAAQM,EAAKN,OACbE,KAAMI,EAAKJ,KACXD,SAAUK,EAAKL,SACfF,SAAUlK,EAAM0K,aAChBC,UAAWF,EAAKE,WAPXF,EAAK5I,c,yBCgEnB+I,EAvEC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAETxC,EAAOC,qBAAWV,GAFK,EAGyB/B,IAA9CE,EAHqB,EAGrBA,UAAWhB,EAHU,EAGVA,MAAOqB,EAHG,EAGHA,YAAauB,EAHV,EAGUA,WAHV,EAIH7B,mBAAS,IAJN,mBAItBgF,EAJsB,KAIfC,EAJe,OAKSjF,mBAAS,GALlB,mBAKtBkF,EALsB,KAKTC,EALS,OAMNnF,mBAAS,IAAzBoF,EANsB,oBAS7BnJ,qBAAU,YACU,uCAAG,4BAAAuE,EAAA,+EAEgBF,EAAY,GAAD,OAC/B0C,0CAD+B,wBACiBT,EAAKJ,MADtB,WAF3B,OAELf,EAFK,OAKX6D,EAAS7D,EAAa4D,OALX,uGAAH,qDAQhBK,KACD,CAAC/E,EAAaiC,EAAKJ,QAEtB,IAMMmD,EAAkBJ,EAAcE,EAChCG,EAAmBD,EAAkBF,EACrCI,EAAeR,EAAMS,MAAMF,EAAkBD,GAOnD,OACI,eAAC,IAAMhH,SAAP,WAEI,cAAC,EAAD,CAAYW,MAAOA,EAAOD,QAAS6C,IACnC,sBAAK1H,UAAU,WAAf,UACI,4DAA+B4K,EAAQ5B,QACvC,sDAAyB4B,EAAQ3B,QAAjC,KAA4C2B,EAAQzB,KAApD,KAA4DyB,EAAQxB,UAEvEtD,GACG,qBAAK9F,UAAU,SAAf,SACI,cAAC,EAAD,OAIN8F,GAAa+E,GAASA,EAAM9J,OAAS,GAAM,cAAC,EAAD,CAAUuJ,MAAOe,EAAcZ,aA7BzD,SAAAc,GACvBT,GAAS,SAAAU,GAAS,OACdA,EAAUtE,QAAO,SAAAsD,GAAI,OAAIA,EAAK5I,KAAO2J,WA4BrC,cAAC,IAAD,CACIE,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWC,KAAKC,KAAKlB,EAAM9J,OAAS,IACpCiL,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5BK,SAAAC,GACbnB,EAAemB,EAAWC,SAAW,GACrC7C,QAAQC,IAAI2C,IA2BJE,mBAAoB,aACpBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,cAAe,YACfC,kBAAmB,eCpCpBC,EAjCC,SAAC5M,GACb,IAAMqI,EAAOC,qBAAWV,GADD,EAE+B/B,IAA9CE,EAFe,EAEfA,UAAWhB,EAFI,EAEJA,MAAOqB,EAFH,EAEGA,YAAauB,EAFhB,EAEgBA,WAFhB,EAGO7B,qBAHP,mBAGhB+E,EAHgB,KAGPgC,EAHO,KAqBvB,OAjBArD,QAAQC,IAAIzJ,EAAM8M,KAElB/K,qBAAU,YACY,uCAAG,4BAAAuE,EAAA,+EAEcF,EAAY,GAAD,OAC/B0C,0CAD+B,wBACiBT,EAAKJ,QAH/C,OAEPf,EAFO,OAMb2F,EAAW3F,EAAa2D,SANX,uGAAH,qDASlBkC,GACAvD,QAAQC,IAAI,WACb,CAACrD,EAAaiC,EAAKJ,QAIlB,eAAC,IAAM7D,SAAP,WACI,cAAC,EAAD,CAAYW,MAAOA,EAAOD,QAAS6C,IAClC5B,GACG,qBAAK9F,UAAU,SAAf,SACI,cAAC,EAAD,OAGN8F,GAAa8E,GAAY,cAAC,EAAD,CAASA,QAASA,QC5B1CmC,G,MAJI,SAAAhN,GACjB,OAAO,wBAAQC,UAAU,cAAlB,SAAiCD,EAAMG,aCoBjC8M,G,MAnBE,SAAAjN,GACf,IAAMqI,EAAOC,qBAAWV,GAExB,OACE,qBAAI3H,UAAU,YAAd,UACGoI,EAAKP,YACJ,6BACE,cAAC,IAAD,CAAS7E,GAAG,OAAZ,yBAGHoF,EAAKP,YACJ,6BACE,wBAAQ3E,QAASkF,EAAKF,OAAtB,2BCIK+E,G,MAhBI,SAAAlN,GACjB,IAAM2D,EACJ,cAACY,EAAA,EAAD,CACEC,GAAIxE,EAAMqE,KACVM,QAAS,IACTC,WAAW,gBACXH,cAAY,EACZC,eAAa,EALf,SAOE,uBAAOzE,UAAU,cAAckD,QAASnD,EAAMmD,QAA9C,SAAwDnD,EAAMG,aAIlE,OAAOmD,IAASC,aAAaI,EAASH,SAASC,eAAe,kBC8BjD0J,G,MAxCQ,SAAAnN,GAAU,IAAD,EACU8F,oBAAS,GADnB,mBACvBsH,EADuB,KACTC,EADS,KAOxBC,EAAqB,WACzBD,GAAgB,IAGlB,OACE,eAAC,IAAMjJ,SAAP,WACGgJ,GAAgB,cAAC,EAAD,CAAUjK,QAASmK,IACpC,cAAC,EAAD,CAAYjJ,KAAM+I,EAAcjK,QAASmK,EAAzC,SACE,qBAAKrN,UAAU,8BAAf,SACE,cAAC,EAAD,QAIJ,eAAC,EAAD,WACE,yBACEA,UAAU,4BACVkD,QApBkB,WACxBkK,GAAgB,IAiBZ,UAIE,yBACA,yBACA,4BAEF,oBAAIpN,UAAU,yBAAd,SACE,cAAC,IAAD,CAAMgD,GAAG,IAAT,sCAEF,qBAAKhD,UAAU,8BAAf,SACE,cAAC,EAAD,cCuFKsN,G,MA/GC,WACZ,IAAMlF,EAAOC,qBAAWV,GADN,EAEoC/B,IAA9CE,EAFU,EAEVA,UAAWhB,EAFD,EAECA,MAAOqB,EAFR,EAEQA,YAAauB,EAFrB,EAEqBA,WAFrB,EAGgBrC,EAC9B,CACI2D,KAAM,CACFtI,MAAO,GACPE,SAAS,GAEbsJ,OAAQ,CACJxJ,MAAO,GACPE,SAAS,GAEbuJ,SAAU,CACNzJ,MAAO,GACPE,SAAS,GAEbwJ,KAAM,CACF1J,MAAO,KACPE,SAAS,GAEb8J,UAAW,CACPhK,MAAO,GACPE,SAAS,KAGjB,GA1Bc,mBAGX4E,EAHW,KAGAkD,EAHA,KA6BZ6E,EAAUC,cAEVC,EAAiB,uCAAG,WAAMzL,GAAN,SAAAqE,EAAA,6DACtBrE,EAAM8B,iBADgB,SASlByF,QAAQC,IAAI,eACZD,QAAQC,IAAIpB,EAAKJ,OAVC,SAWZ7B,EAAY,GAAD,OAAI0C,0CAAJ,wBAAoDT,EAAKJ,OAAS,OAAQc,KAAKC,UAAU,CACtGC,KAAMxD,EAAUJ,OAAO4D,KAAKtI,MAC5BwJ,OAAQ1E,EAAUJ,OAAO8E,OAAOxJ,MAChCyJ,SAAU3E,EAAUJ,OAAO+E,SAASzJ,MACpC0J,KAAM5E,EAAUJ,OAAOgF,KAAK1J,MAC5BgK,UAAWlF,EAAUJ,OAAOsF,UAAUhK,QACtC,CACA,eAAgB,mBAChBsJ,cAAe,UAAY5B,EAAKL,QAnBlB,OAqBlBwF,EAAQ3G,KAAK,KArBK,yGAAH,sDAyBvB,OACI,eAAC,IAAMzC,SAAP,WACI,cAAC,EAAD,CAAYW,MAAOA,EAAOD,QAAS6C,IACnC,uBAAM1H,UAAU,aAAa6D,SAAU4J,EAAvC,UACK3H,GAAa,cAAC,EAAD,CAAgBd,WAAS,IACvC,cAAC,EAAD,CACIpD,GAAG,OACHO,QAAQ,QACR3B,KAAK,OACLiC,MAAM,YACN9B,WAAY,CAACJ,KACbmC,UAAU,8BACVb,QAAS6G,IAEb,cAAC,EAAD,CACI9G,GAAG,SACHO,QAAQ,QACRM,MAAM,SACN9B,WAAY,CAACJ,KACbmC,UAAU,4DACVb,QAAS6G,IAEb,cAAC,EAAD,CACI9G,GAAG,WACHO,QAAQ,QACRM,MAAM,WACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,IAEb,cAAC,EAAD,CACI9G,GAAG,OACHO,QAAQ,QACRM,MAAM,WACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,IAGb,cAAC,EAAD,CACI9G,GAAG,YACHO,QAAQ,QACRM,MAAM,YACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,IAEb,cAAC,EAAD,CAAQlI,KAAK,SAAS2C,UAAWqC,EAAU5E,QAA3C,8BCiED8M,EA1KI,WACf,IAAMH,EAAUC,cACVpF,EAAOC,qBAAWV,GAFH,EAGiC/B,IAA9CE,EAHa,EAGbA,UAAWhB,EAHE,EAGFA,MAAOqB,EAHL,EAGKA,YAAauB,EAHlB,EAGkBA,WACjCiG,EAASC,cAAYC,IAJN,EAKehI,qBALf,mBAKdiI,EALc,KAKFC,EALE,OAM0B1I,EAC3C,CACI2D,KAAM,CACFtI,MAAO,GACPE,SAAS,GAEbsJ,OAAQ,CACJxJ,MAAO,GACPE,SAAS,GAEbuJ,SAAU,CACNzJ,MAAO,GACPE,SAAS,GAEbwJ,KAAM,CACF1J,MAAO,KACPE,SAAS,GAEb8J,UAAW,CACPhK,MAAO,GACPE,SAAS,KAGjB,GA7BiB,mBAMd4E,EANc,KAMHkD,EANG,KAMWC,EANX,KAgCrB7G,qBAAU,YACS,uCAAG,4BAAAuE,EAAA,+EAEiBF,EAAY,GAAD,OAC/B0C,0CAD+B,6BACsB8E,IAHlD,OAEJ1G,EAFI,OAKV8G,EAAc9G,EAAauD,MAC3B7B,EAAY,CACRK,KAAM,CACFtI,MAAOuG,EAAauD,KAAKxB,KACzBpI,SAAS,GAEbsJ,OAAQ,CACJxJ,MAAOuG,EAAauD,KAAKN,OACzBtJ,SAAS,GAEbuJ,SAAU,CACNzJ,MAAOuG,EAAauD,KAAKL,SACzBvJ,SAAS,GAEbwJ,KAAM,CACF1J,MAAOuG,EAAauD,KAAKJ,KACzBxJ,SAAS,GAEb8J,UAAW,CACPhK,MAAOuG,EAAauD,KAAKE,UACzB9J,SAAS,KAGb,GA5BM,gDA+BV2I,QAAQC,IAAR,MA/BU,yDAAH,qDAkCfwE,KACD,CAAC7H,EAAawH,EAAQhF,IAEzB,IAAM8E,EAAiB,uCAAG,WAAMzL,GAAN,SAAAqE,EAAA,6DACtBrE,EAAM8B,iBADgB,kBAGZqC,EAAY,GAAD,OACV0C,0CADU,6BAC2C8E,GACxD,QACA7E,KAAKC,UAAU,CACXC,KAAMxD,EAAUJ,OAAO4D,KAAKtI,MAC5BwJ,OAAQ1E,EAAUJ,OAAO8E,OAAOxJ,MAChCyJ,SAAU3E,EAAUJ,OAAO+E,SAASzJ,MACpC0J,KAAM5E,EAAUJ,OAAOgF,KAAK1J,MAC5BgK,UAAWlF,EAAUJ,OAAOsF,UAAUhK,QAE1C,CACI,eAAgB,mBAChBsJ,cAAe,UAAY5B,EAAKL,QAftB,OAkBlBwF,EAAQ3G,KAAK,KAlBK,uGAAH,sDAsBvB,OAAId,EAEI,qBAAK9F,UAAU,SAAf,SACI,cAAC,EAAD,MAKP8N,GAAehJ,EAWhB,eAAC,IAAMX,SAAP,WACI,cAAC,EAAD,CAAYW,MAAOA,EAAOD,QAAS6C,IACnC,uBAAM1H,UAAU,aAAa6D,SAAU4J,EAAvC,UACK3H,GAAa,cAAC,EAAD,CAAgBd,WAAS,IACvC,cAAC,EAAD,CACIpD,GAAG,OACHO,QAAQ,QACR3B,KAAK,OACLiC,MAAM,YACN9B,WAAY,CAACJ,KACbmC,UAAU,8BACVlB,aAAcsM,EAAW9E,KACzBnH,QAAS6G,IAEb,cAAC,EAAD,CACI9G,GAAG,SACHO,QAAQ,QACRM,MAAM,SACN9B,WAAY,CAACJ,KACbmC,UAAU,4DACVb,QAAS6G,EACTlH,aAAcsM,EAAW5D,SAE7B,cAAC,EAAD,CACItI,GAAG,WACHO,QAAQ,QACRM,MAAM,WACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,EACTlH,aAAcsM,EAAW3D,WAE7B,cAAC,EAAD,CACIvI,GAAG,OACHO,QAAQ,QACRM,MAAM,WACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,EACTlH,aAAcsM,EAAW1D,OAG7B,cAAC,EAAD,CACIxI,GAAG,YACHO,QAAQ,QACRM,MAAM,YACN9B,WAAY,CAACJ,KACbmC,UAAU,gCACVb,QAAS6G,EACTlH,aAAcsM,EAAWpD,YAE7B,cAAC,EAAD,CAAQlK,KAAK,SAAS2C,SAAUqC,EAAU5E,QAA1C,4BA5DJ,qBAAKZ,UAAU,SAAf,SACI,cAAC,EAAD,UACI,2DC/CLiO,EAxDH,WAAO,IAEbC,EAFY,EvBXK,WAAO,IAAD,EACDrI,oBAAS,GADR,mBACpBkC,EADoB,KACboG,EADa,OAE2BtI,qBAF3B,mBAEpBuI,EAFoB,KAECC,EAFD,OAGCxI,oBAAS,GAHV,mBAGpBiC,EAHoB,KAGZwG,EAHY,OAIDzI,oBAAS,GAJR,mBAIpBmC,EAJoB,KAIbuG,EAJa,KAMrBtG,EAAQxC,uBAAY,SAAC+I,EAAKzG,EAAO8E,EAAK4B,GAC1CN,EAASpG,GACTuG,EAAUE,GACVD,EAAS1B,GACTtD,QAAQC,IAAIxB,GACZuB,QAAQC,IAAI1B,GAEZ,IAAMsG,EACJK,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACpDN,EAAuBD,GACvBQ,aAAaC,QACX,WACA/F,KAAKC,UAAU,CACbjB,OAAQ0G,EACRzG,MAAOA,EACPC,MAAO6E,EACPiC,WAAYV,EAAoBW,mBAGnC,IAEG7G,EAASzC,uBAAY,WACzB0I,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVC,EAAS,MACTK,aAAaI,WAAW,cACvB,IAsBH,OApBAlN,qBAAU,WACR,GAAIiG,GAASqG,EAAqB,CAChC,IAAMa,EAAgBb,EAAoBO,WAAY,IAAID,MAAOC,UACjE9O,EAAcqP,WAAWhH,EAAQ+G,QAEjCE,aAAatP,KAEd,CAACkI,EAAOG,EAAQkG,IAEnBtM,qBAAU,WACR,IAAMsN,EAAatG,KAAKuG,MAAMT,aAAaU,QAAQ,aAEjDF,GACAA,EAAWrH,OACX,IAAI2G,KAAKU,EAAWN,YAAc,IAAIJ,MAEtCzG,EAAMmH,EAAWtH,OAAQsH,EAAWrH,MAAOqH,EAAWpH,MAAO,IAAI0G,KAAKU,EAAWN,eAElF,CAAC7G,IAEG,CAAEF,QAAOE,QAAOC,SAAQJ,SAAQE,SuB3CSuH,GAAxCxH,EADQ,EACRA,MAAOE,EADC,EACDA,MAAOC,EADN,EACMA,OAAQJ,EADd,EACcA,OAAQE,EADtB,EACsBA,MAkCtC,OA/BAlG,qBAAU,WACRyH,QAAQC,IAAI,SACZD,QAAQC,IAAIxB,KACX,CAACA,IAGFkG,EADEnG,EAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyH,KAAK,IAAIvM,OAAK,EAArB,SACG+E,EAAQ,cAAC,EAAD,CAAS6E,IAAK7E,IAAY,cAAC,EAAD,MAErC,cAAC,IAAD,CAAOwH,KAAK,OAAOvM,OAAK,EAAxB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOuM,KAAK,aAAavM,OAAK,EAA9B,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAUD,GAAG,SAKf,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwM,KAAK,QAAQvM,OAAK,EAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUD,GAAG,aAKjB,cAAC2E,EAAY8H,SAAb,CACE/O,MAAO,CACLmH,aAAcE,EACdA,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,MAAOA,EACPC,OAAQA,GAPZ,SAUE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,+BAAOgG,UCrDAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdtM,IAAS8M,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7M,SAASC,eAAe,SAM1BkM,M","file":"static/js/main.e72795e2.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport Auth from '../pages/Auth';\n\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [libId, setLibId] = useState(false);\n\n  const login = useCallback((uid, token, lid, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setLibId(lid);\n    console.log(libId);\n    console.log(userId)\n\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        libId: lid,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setLibId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.libId, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, libId };\n};","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  libId: null,\n  login: () => { },\n  logout: () => { }\n});\n","import React, { useState, useContext } from 'react';\r\nimport Card from '../components/UIElements/Card';\r\nimport Input from '../components/FormElements/Input';\r\nimport Button from '../components/FormElements/Button';\r\nimport ErrorModal from '../components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\n\r\nimport {\r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH,\r\n    VALIDATOR_REQUIRE\r\n} from '../util/validators';\r\n\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport './Auth.css'\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined,\r\n                    address: undefined,\r\n                    country: undefined,\r\n                    city: undefined,\r\n                    zip: undefined,\r\n                    zip4: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false\r\n                    },\r\n                    address: {\r\n                        value: '',\r\n                        isValid: false\r\n                    },\r\n\r\n                    country: {\r\n                        value: '',\r\n                        isValid: false\r\n                    },\r\n\r\n                    city: {\r\n                        value: '',\r\n                        isValid: false\r\n                    },\r\n                    zip: {\r\n                        value: null,\r\n                        isValid: false\r\n                    },\r\n                    zip4: {\r\n                        value: null,\r\n                        isValid: false\r\n                    },\r\n\r\n                },\r\n                false\r\n            );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_SERVER_URL}/api/admin/login`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login(responseData.userId, responseData.token, responseData.libId);\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_SERVER_URL}/api/admin/signup`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value,\r\n                        address: formState.inputs.address.value,\r\n                        country: formState.inputs.country.value,\r\n                        city: formState.inputs.city.value,\r\n                        zip: formState.inputs.zip.value,\r\n                        zip4: formState.inputs.zip4.value\r\n\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                // console.log(responseData)\r\n                auth.libId = responseData.libid;\r\n                auth.userId = responseData.userId;\r\n                console.log(responseData);\r\n                auth.login(responseData.userId, responseData.token, responseData.libid);\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                {isLoginMode ? <h2> Login Required</h2> : <h2>Welcome to SignUp : Book Finder</h2>}\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Library Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"address\"\r\n                            type=\"text\"\r\n                            label=\"Address\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a address.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-Mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"Please enter a valid password, at least 6 characters.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"country\"\r\n                            type=\"text\"\r\n                            label=\"Country\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter country.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"city\"\r\n                            type=\"text\"\r\n                            label=\"city\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter city.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"zip\"\r\n                            type=\"text\"\r\n                            label=\"zip\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter zip.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"zip4\"\r\n                            type=\"text\"\r\n                            label=\"zip4\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter zip4.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>\r\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n                </Button>\r\n            </Card>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { AuthContext } from '../context/auth-context';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport Card from './UIElements/Card';\r\nimport Button from './FormElements/Button';\r\nimport Modal from '../components/UIElements/Modal';\r\n\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\nimport './BookItem.css';\r\n\r\nconst BookItem = props => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, sendRequest } = useHttpClient();\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_SERVER_URL}/api/library/book/${auth.libId}/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            props.onDelete(props.id);\r\n        } catch (err) { }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>\r\n                            CANCEL\r\n                        </Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            DELETE\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    Do you want to proceed and delete this place? Please note that it\r\n                    can't be undone thereafter.\r\n            </p>\r\n            </Modal>\r\n            <li className='book_item'>\r\n                <Card>\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className='book-position'>\r\n                        <div className='align-left'>\r\n                            <span>{props.name}</span>\r\n                            <br />\r\n                            <span>Author :  {props.author} </span>\r\n                            <br />\r\n                            <span>Category: {props.category}</span>\r\n                            <br />\r\n                            <span>ISBN No: {props.isbn}</span>\r\n                            <br />\r\n                        </div>\r\n                        <div className='align-right'>\r\n                            <Button to={`/book/${props.id}`}> Update Book</Button>\r\n                            <Button danger onClick={showDeleteWarningHandler}> Delete Book</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </li >\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BookItem\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\nimport './BookList.css';\r\n\r\nconst BookList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"no-books\">\r\n                <h2>No Books Found Please try a different Search</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"books-list\">\r\n                <h4 className='list-name'> List of Current Books in the Library</h4>\r\n                {props.items.map(book => (\r\n                    <BookItem\r\n                        key={book.id}\r\n                        id={book.id}\r\n                        name={book.name}\r\n                        author={book.author}\r\n                        isbn={book.isbn}\r\n                        category={book.category}\r\n                        onDelete={props.onDeleteBook}\r\n                        publisher={book.publisher}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { AuthContext } from '../context/auth-context';\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../components/UIElements/ErrorModal';\r\nimport BookList from '../components/BookList';\r\nimport './Library.css';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\n\r\nconst Library = ({ library }) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [books, setBooks] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    // console.log(books);\r\n\r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_SERVER_URL}/api/library/${auth.libId}/books`\r\n                );\r\n                setBooks(responseData.books);\r\n            } catch (err) { }\r\n        };\r\n        fetchBooks();\r\n    }, [sendRequest, auth.libId]);\r\n\r\n    const bookDeletedHandler = bookDeleteId => {\r\n        setBooks(prevBooks =>\r\n            prevBooks.filter(book => book.id !== bookDeleteId)\r\n        );\r\n    };\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentBooks = books.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber.selected + 1);\r\n        console.log(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div className='lib-name'>\r\n                <h4>Current Library Account : {library.name}</h4>\r\n                <span>Library Address : {library.address}, {library.city}, {library.zip}</span>\r\n            </div>\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && books && books.length > 0 && (<BookList items={currentBooks} onDeleteBook={bookDeletedHandler} />)}\r\n            <ReactPaginate\r\n                previousLabel={'previous'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={Math.ceil(books.length / 10)}\r\n                marginPagesDisplayed={3}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={'pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'page-link'}\r\n                previousClassName={'prev-link'}\r\n                nextClassName={'next-link'}\r\n                pageLinkClassName={'a-link'}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthContext } from '../context/auth-context';\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../components/UIElements/ErrorModal';\r\nimport Library from '../components/Library';\r\n\r\nconst LibHome = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [library, setLibrary] = useState();\r\n    console.log(props.lid);\r\n\r\n    useEffect(() => {\r\n        const fetchLibrary = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_SERVER_URL}/api/library/${auth.libId}`\r\n                );\r\n\r\n                setLibrary(responseData.library);\r\n            } catch (err) { }\r\n        };\r\n        fetchLibrary();\r\n        console.log(\"Hello\");\r\n    }, [sendRequest, auth.libId]);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && library && (<Library library={library} />)}\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default LibHome","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/new\">Add Books</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Book Finder Admin Site</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../components/FormElements/Input';\r\nimport Button from '../components/FormElements/Button';\r\nimport ErrorModal from '../components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n} from '../util/validators';\r\n\r\nimport './NewBook.css'\r\n\r\n\r\nimport { useForm } from '..//hooks/form-hook';\r\nimport { useHttpClient } from '..//hooks/http-hook';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst NewBook = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            name: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            author: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            isbn: {\r\n                value: null,\r\n                isValid: false\r\n            },\r\n            publisher: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const history = useHistory();\r\n\r\n    const bookSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('name', formState.inputs.name.value);\r\n            // formData.append('author', formState.inputs.author.value);\r\n            // formData.append('category', formState.inputs.category.value);\r\n            // formData.append('isbn', formState.inputs.isbn.value);\r\n            // formData.append('publisher', formState.inputs.publisher.value);\r\n            console.log(\"Hi from add\");\r\n            console.log(auth.libId);\r\n            await sendRequest(`${process.env.REACT_APP_SERVER_URL}/api/library/${auth.libId}`, 'POST', JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                author: formState.inputs.author.value,\r\n                category: formState.inputs.category.value,\r\n                isbn: formState.inputs.isbn.value,\r\n                publisher: formState.inputs.publisher.value\r\n            }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            history.push('/');\r\n        } catch (err) { }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className=\"place-form\" onSubmit={bookSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Book Name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"author\"\r\n                    element=\"input\"\r\n                    label=\"Author\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid description (at least 5 characters).\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"category\"\r\n                    element=\"input\"\r\n                    label=\"Category\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"isbn\"\r\n                    element=\"input\"\r\n                    label=\"ISBN No:\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Input\r\n                    id=\"publisher\"\r\n                    element=\"input\"\r\n                    label=\"Publisher\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    ADD Book\r\n                </Button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NewBook\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../components/FormElements/Input';\r\nimport Button from '../components/FormElements/Button';\r\nimport Card from '../components/UIElements/Card';\r\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../components/UIElements/ErrorModal';\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n} from '../util/validators';\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport './NewBook.css';\r\n\r\nconst UpdateBook = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const bookId = useParams().bid;\r\n    const [loadedBook, setLoadedBook] = useState();\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            name: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            author: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            isbn: {\r\n                value: null,\r\n                isValid: false\r\n            },\r\n            publisher: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchBook = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_SERVER_URL}/api/library/book/${bookId}`\r\n                );\r\n                setLoadedBook(responseData.book);\r\n                setFormData({\r\n                    name: {\r\n                        value: responseData.book.name,\r\n                        isValid: true\r\n                    },\r\n                    author: {\r\n                        value: responseData.book.author,\r\n                        isValid: true\r\n                    },\r\n                    category: {\r\n                        value: responseData.book.category,\r\n                        isValid: true\r\n                    },\r\n                    isbn: {\r\n                        value: responseData.book.isbn,\r\n                        isValid: true\r\n                    },\r\n                    publisher: {\r\n                        value: responseData.book.publisher,\r\n                        isValid: true\r\n                    }\r\n                },\r\n                    true\r\n                );\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchBook();\r\n    }, [sendRequest, bookId, setFormData]);\r\n\r\n    const bookSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_SERVER_URL}/api/library/book/${bookId}`,\r\n                'PATCH',\r\n                JSON.stringify({\r\n                    name: formState.inputs.name.value,\r\n                    author: formState.inputs.author.value,\r\n                    category: formState.inputs.category.value,\r\n                    isbn: formState.inputs.isbn.value,\r\n                    publisher: formState.inputs.publisher.value\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            history.push('/');\r\n        } catch (err) { }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!loadedBook && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>Could not find Book!</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className=\"place-form\" onSubmit={bookSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Book Name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title.\"\r\n                    initialValue={loadedBook.name}\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"author\"\r\n                    element=\"input\"\r\n                    label=\"Author\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid description (at least 5 characters).\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedBook.author}\r\n                />\r\n                <Input\r\n                    id=\"category\"\r\n                    element=\"input\"\r\n                    label=\"Category\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedBook.category}\r\n                />\r\n                <Input\r\n                    id=\"isbn\"\r\n                    element=\"input\"\r\n                    label=\"ISBN No:\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedBook.isbn}\r\n                />\r\n\r\n                <Input\r\n                    id=\"publisher\"\r\n                    element=\"input\"\r\n                    label=\"Publisher\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedBook.publisher}\r\n                />\r\n                <Button type=\"submit\" disabled={formState.isValid}>\r\n                    ADD Book\r\n                </Button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UpdateBook\r\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport { useAuth } from './hooks/auth-hook';\nimport LibHome from './pages/LibHome';\nimport Auth from './pages/Auth';\nimport { AuthContext } from './context/auth-context';\nimport LoadingSpinner from './components/UIElements/LoadingSpinner';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport NewBook from './pages/NewBook';\nimport UpdateBook from './pages/UpdateBook';\n\nconst App = () => {\n  const { token, login, logout, userId, libId } = useAuth();\n  let routes;\n\n  useEffect(() => {\n    console.log(\"hello\");\n    console.log(libId);\n  }, [libId])\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          {libId ? <LibHome lid={libId} /> : <LoadingSpinner />}\n        </Route>\n        <Route path=\"/new\" exact>\n          <NewBook />\n        </Route>\n        <Route path=\"/book/:bid\" exact>\n          <UpdateBook />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        libId: libId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}